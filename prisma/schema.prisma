// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      String
  orders    Order[]
}

model Order {
  id           String   @id @default(uuid())
  totalInCents Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  userId         String
  products       String[]
  prices         Int[]
  mailingAddress String
  user           User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  orderItem      OrderItem[]
  // product        Product  @relation(fields: [products], references: [id], onDelete: Restrict)
}

model OrderItem {
  id              String    @id @default(uuid())
  order_id        String
  product_id      String
  productPrice    Int
  productQuantity Int
  created_at      DateTime? @default(now()) @db.Timestamptz(6)
  order           Order     @relation(fields: [order_id], references: [id])
  // product    Product   @relation(fields: [product_id], references: [id])
}

model Product {
  id           String   @id @default(uuid())
  category     String
  name         String
  priceInCents Int
  image        String[]
  description  String
  // quantity     Int      @default(0)
  isAvailable  Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  // orderItem    OrderItem[]
  // orders       Order[]
}
